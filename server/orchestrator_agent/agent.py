from google.adk.agents import Agent
from google.adk.agents import ParallelAgent, SequentialAgent

from .subagents.component_agent import component_agent
from .subagents.logo_agent import logo_agent
from pydantic import BaseModel, Field

class FinalResultAgentResponse(BaseModel):
    name: str = Field(..., description="The name of the component.This should be same as the input")
    description: str = Field(..., description="A short description of the component.")
    functionality: str = Field(..., description="The code out the return statement of the component. Basically the logic of the component.")
    code: str = Field(..., description="The code inside the return statement of the component. Basically the JSX code.")

class FinalResultAgentResponseList(BaseModel):
    components: list[FinalResultAgentResponse]
    logo_url: str = Field(..., description="The URL of the logo image generated by the logo agent.")


layout_agent=ParallelAgent(
    name="layout_agent",
    sub_agents=[component_agent, logo_agent],
)

combine_results_agent=Agent(
    name="combine_results_agent",
    # https://ai.google.dev/gemini-api/docs/models
    model="gemini-2.0-flash",
    description="Combine results agent",
    instruction="""
    You are a helpful assistant that combines the results of the sub-agents.
    Now you have the object {component_agent_response}, add a new field to the object as 'logo_url' whose value is {logo_agent_response}
    You will respond with the combined object.
    Strictly don't change the existing structure or values of the object.
    """,
    output_schema=FinalResultAgentResponseList,
)

root_agent = SequentialAgent(
    name="orchestrator_agent",
    sub_agents=[layout_agent, combine_results_agent],
)
